# cluster-bundle-push.yml
---

    - hosts: clustermanager
      become: true
      become_user: "{{ splunk_runtime_user }}"
      roles:
        - '../roles/splunk-servers'
      vars_files:
        - ../vaults/{{ organization_prefix }}_splunk_passwords.yml

      tasks:

        - name: Pull changes from git repo
          shell: git pull
          register: pull
          changed_when: pull.stdout != "Already up to date." and pull.stdout != "Already up-to-date."
          args:
            chdir: "{{ splunk_home }}/etc/manager-apps"

        - name: Login to Splunk CLI
          shell: "{{ splunk_home }}/bin/splunk login -auth {{ splunk_admin_user }}:{{ splunkAdminPassword }}"
          no_log: true

        - name: Validate bundle
          shell: "{{ splunk_home }}/bin/splunk validate cluster-bundle --check-restart -y"

        - name: Check validation progress
          shell: "{{ splunk_home }}/bin/splunk show cluster-bundle-status | grep cluster_status | awk '{ print $1 }'"
          register: validation_status
          until: validation_status.stdout == "cluster_status=None"
          retries: 20
          delay: 60
          ignore_errors: true

        - name: Capture errors (if any)
          shell: "{{ splunk_home }}/bin/splunk show cluster-bundle-status | grep 'manager-apps'"
          register: error_status
          failed_when: error_status.stdout != ""

        - name: Capture status of bundle
          shell: "{{ splunk_home }}/bin/splunk show cluster-bundle-status -y | grep last_validation_succeeded | awk '{ print $1 }'"
          register: bundle_status
          failed_when: bundle_status.stdout != "last_validation_succeeded=1"

        - name: Capture status of restart
          shell: "{{ splunk_home }}/bin/splunk show cluster-bundle-status -y | grep restart_required | head -n 1 | awk '{ print $1 }'"
          register: restart_status

        - name: Print output
          ansible.builtin.debug:
            msg: |
              "{{ bundle_status.stdout }}"
              "{{ restart_status.stdout }}"

        - name: Apply bundle
          shell: "{{ splunk_home }}/bin/splunk apply cluster-bundle -y"
