# deployment-server-reload.yml
---

    - hosts: deploymentserver
      become: true
      become_user: "{{ splunk_runtime_user }}"
      roles:
        - '../roles/splunk-servers'
      vars_files:
        - ../vaults/{{ organization_prefix }}_splunk_passwords.yml

      tasks:

        - name: Pull changes from git repo
          shell: git pull
          register: pull
          changed_when: pull.stdout != "Already up to date." and pull.stdout != "Already up-to-date."
          args:
            chdir: "{{ splunk_home }}/etc/deployment-apps"

        - name: Sync serverclass.conf from repo
          synchronize:
            src: "{{ splunk_home }}/etc/deployment-apps/serverclass.conf"
            dest: "{{ splunk_home }}/etc/system/local/"
            checksum: yes
            times: no
          delegate_to: "{{ inventory_hostname }}"

        - name: Login to Splunk CLI
          shell: "{{ splunk_home }}/bin/splunk login -auth {{ splunk_admin_user }}:{{ splunkAdminPassword }}"
          no_log: true
          when: (pull.stdout != "Already up to date." and pull.stdout != "Already up-to-date.")

        - name: Reload server (All Classes)
          shell: "{{ splunk_home }}/bin/splunk reload deploy-server -timeout {{ deployment_server_timeout }}"
          when: pull.stdout != "Already up to date." and pull.stdout != "Already up-to-date." and serverclass is not defined

        - name: Reload server (Specified Classes)
          shell: "{{ splunk_home }}/bin/splunk reload deploy-server -class '{{ item }}'"
          when: pull.stdout != "Already up to date." and pull.stdout != "Already up-to-date." and serverclass is defined
          with_items:
            - "{{ serverclass }}"
