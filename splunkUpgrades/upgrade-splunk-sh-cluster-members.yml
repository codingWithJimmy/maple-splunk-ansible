# upgrade-splunk-sh-cluster-members.yml
---

    - hosts: search
      become: true
      serial: 1
      roles:
        - '../roles/splunk-servers'
      vars_files:
        - ../vaults/{{ organization_prefix }}_splunk_passwords.yml

      tasks:

        - name: Check version
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk version | awk '{print $2}'"
          register: current_version
          changed_when: current_version.stdout != splunk_version

        - name: Login to Splunk CLI
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk login -auth {{ splunk_admin_user }}:{{ splunkAdminPassword }}"
          no_log: true
          when: current_version.stdout != splunk_version

        - name: Place member into manual detention
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk edit shcluster-config -manual_detention on"
          when: current_version.stdout != splunk_version

        - name: Confirm searches are completed on current member
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk list shcluster-member-info | grep 'active' | grep '0' | wc -l"
          register: upgrade_ready
          until: upgrade_ready.stdout <= "2"
          delay: 30
          retries: 10
          when: current_version.stdout != splunk_version

        - name: Stop Splunk (systemd)
          ansible.builtin.service:
            name: "{{ splunk_unit_file }}"
            state: stopped
          when: current_version.stdout != splunk_version
          ignore_errors: true

        - name: Upgrade Splunk (tgz)
          unarchive:
            src: "{{ splunk_runtime_user_home }}/splunk-{{ splunk_version }}.{{ splunk_install_type }}"
            dest: "{{ splunk_install_location }}"
            remote_src: true
          when: splunk_install_type == "tgz" and current_version.stdout != splunk_version

        - name: Upgrade Splunk (rpm)
          shell: rpm -Uvh "{{ splunk_runtime_user_home }}/splunk-{{ splunk_version }}.{{ splunk_install_type }}" --prefix={{ splunk_install_location }}
          when: splunk_install_type == "rpm" and current_version.stdout != splunk_version

        - name: Upgrade Splunk (deb)
          apt:
            deb: "{{ splunk_runtime_user_home }}/splunk-{{ splunk_version }}.{{ splunk_install_type }}"
            state: present
          when: splunk_install_type == "deb" and current_version.stdout != splunk_version

        - name: Remove Splunk install package
          file:
            path: "{{ splunk_runtime_user_home }}/splunk-{{ splunk_version }}.{{ splunk_install_type }}"
            state: absent

        - name: Change ownership
          shell: chown -R {{ splunk_runtime_user }}. {{ splunk_home }} {{ splunk_runtime_user_home }}
          when: current_version.stdout != splunk_version

        - name: Accept Splunk license
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk status --accept-license --answer-yes --no-prompt"
          register: splunk_license_result
          changed_when: splunk_license_result.rc != 0
          failed_when: splunk_license_result.rc == 0
          when: current_version.stdout != splunk_version

        - name: Start Splunk (systemd)
          ansible.builtin.service:
            name: "{{ splunk_unit_file }}"
            state: started
          when: current_version.stdout != splunk_version

        - name: Wait for Splunk to start
          pause:
            minutes: 1
          when: current_version.stdout != splunk_version

        - name: Login to Splunk CLI
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk login -auth {{ splunk_admin_user }}:{{ splunkAdminPassword }}"
          no_log: true

        - name: Remove manual detention
          become_user: "{{ splunk_runtime_user }}"
          shell: "{{ splunk_home }}/bin/splunk edit shcluster-config -manual_detention off"
